{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DATOM'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n{ assign }                = Object\n#...........................................................................................................\n{ get_base_types }        = require './types'\nletsfreezethat            = require 'letsfreezethat'\nletsfreezethat_nofreeze   = require 'letsfreezethat/nofreeze'\n\n\n\n#===========================================================================================================\n# SELECT\n#-----------------------------------------------------------------------------------------------------------\np1 = /// # `\\x23` used instead of `\\#` which causes syntax error (???)\n  ^\n    (?<skey>\n      (?<sigil>            [  < ^ > \\[ ~ \\] \\x23 ]  )\n      (?<key>              [^ < ^ > \\[ ~ \\] \\x23 ]* )\n    )\n  $ ///u\np2 = /// # `\\x23` used instead of `\\#` which causes syntax error (???)\n  ^\n    (?<skey>\n      (?<sigil>            [  < ^ > \\[ ~ \\] \\x23 ]  )\n      (?<key>              [^ < ^ > \\[ ~ \\] \\x23 ]* )\n    ) \\x23\n    (?<attribute>        [^ < ^ > \\[ ~ \\] \\x23 ]+ ) :\n    (?<value>            [^ < ^ > \\[ ~ \\] \\x23 ]+ )\n  $ ///u\n\n\n\n\n\n#===========================================================================================================\n# EXPORT\n#-----------------------------------------------------------------------------------------------------------\nMAIN = @\nclass Datom\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg = null ) ->\n    # super()\n    @types    = get_base_types()\n    @cfg      = letsfreezethat.freeze @types.create.datom_constructor_cfg cfg\n    @LFT      = if @cfg.freeze then letsfreezethat else letsfreezethat_nofreeze\n    @freeze   = @LFT.freeze\n    @thaw     = @LFT.thaw\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  lets: ( original, modifier ) =>\n    draft = @thaw original\n    if modifier?\n      modifier draft\n      ### TAINT simplify logic by rewriting as single term without double negatives ###\n      if @cfg.dirty\n        draft.$dirty = true unless draft.$dirty isnt original.dirty\n    return @freeze draft\n\n  #---------------------------------------------------------------------------------------------------------\n  set: ( d, k, P... ) =>\n    if @types.isa.text k\n      throw new Error \"µ67663 expected 1 value got #{count}\" unless ( count = P.length ) is 1\n      return @lets d, ( d ) -> d[ k ] = P[ 0 ]\n    return @lets d, ( d ) -> d[ k ]  = v for k, v of assign {}, k, P...\n\n  #---------------------------------------------------------------------------------------------------------\n  unset: ( d, k ) => @lets d, ( d ) -> delete d[ k ]\n\n  #---------------------------------------------------------------------------------------------------------\n  stamp: ( d, P... ) =>\n    ### Set the `$stamped` attribute on datom to sigil it as processed. Stamped datoms will not be selected\n    by the `select` method unless tag '#stamped' is used. ###\n    return @lets d, ( d ) -> assign d, P..., { $stamped: true, }\n\n  #---------------------------------------------------------------------------------------------------------\n  unstamp: ( d ) =>\n    return d unless d.$stamped\n    return @lets d, ( d ) -> delete d.$stamped\n\n  #---------------------------------------------------------------------------------------------------------\n  is_system: ( d ) =>\n    ### Return whether datom is a system datom (i.e. whether its `sigil` equals `'~'`). ###\n    return d.$key.match /^[~\\[\\]]/\n\n  #---------------------------------------------------------------------------------------------------------\n  is_stamped: ( d ) => d.$stamped ? false ### i.e. already processed? ###\n  is_fresh:   ( d ) => d.$fresh   ? false ### i.e. created within stream? ###\n  is_dirty:   ( d ) => d.$dirty   ? false ### i.e. modified? ###\n  is_datom:   ( x ) => @types.isa.datom_datom x\n\n  #---------------------------------------------------------------------------------------------------------\n  new_datom: ( $key, $value, other... ) =>\n    ### When `other` contains a key `$`, it is treated as a hint to copy\n    system-level attributes; if the value of key `$` is a POD that has itself a\n    key `$`, then a copy of that value is used. This allows to write `new_datom\n    ..., $: d` to copy system-level attributes such as source locations to a new\n    datom. ###\n    @types.validate.datom_key $key\n    return @_new_datom $key, $value, other...\n\n  #---------------------------------------------------------------------------------------------------------\n  _new_datom: ( $key, $value, other... ) =>\n    if $value?\n      $value  = { $value, } if ( not @cfg.merge_values ) or ( not @types.isa.object $value )\n      throw new Error \"µ55632 value must not have attribute '$key'\" if '$key' in Object.keys $value\n      R       = assign {}, $value,  other..., { $key, }\n    else\n      R       = assign {},          other..., { $key, }\n    while ( @types.isa.object R.$ ) and ( @types.isa.object R.$.$ ) then R.$ = @LFT._deep_copy R.$.$\n    return @freeze R\n\n  #---------------------------------------------------------------------------------------------------------\n  fresh_datom: ( P... ) => @new_datom P..., { $fresh: true, }\n\n  #---------------------------------------------------------------------------------------------------------\n  wrap_datom: ( $key, $value ) =>\n    @types.validate.datom_key    $key\n    @types.validate.datom_datom  $value\n    return @freeze { $key, $value, }\n\n  #---------------------------------------------------------------------------------------------------------\n  new_single_datom: ( name, P... ) => @types.validate.datom_name name; @_new_datom \"^#{name}\",  P...\n  new_open_datom:   ( name, P... ) => @types.validate.datom_name name; @new_datom  \"<#{name}\",  P...\n  new_close_datom:  ( name, P... ) => @types.validate.datom_name name; @new_datom  \">#{name}\",  P...\n  new_system_datom: ( name, P... ) => @types.validate.datom_name name; @new_datom  \"~#{name}\",  P...\n  new_text_datom:   (       P... ) => @new_single_datom  'text', P...\n  new_end_datom:                   -> @new_system_datom  'end'\n  # @new_flush_datom    =                           -> @new_system_datom  'flush'\n\n  #---------------------------------------------------------------------------------------------------------\n  new_warning: ( ref, message, d, other...  ) =>\n    @new_system_datom 'warning', d, { ref, message, }, other...\n\n\n  #=========================================================================================================\n  #\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT likely to be removed ###\n  new_xemitter: ( P... ) => new ( require './xemitter' ).Xemitter P...\n\n\n  #=========================================================================================================\n  #\n  #---------------------------------------------------------------------------------------------------------\n  select: ( d, selector ) =>\n    throw new Error \"µ86606 expected a selector, got none\" unless selector?\n    return false unless ( ( @types.isa.object d ) and ( d.$key? ) )\n    #.......................................................................................................\n    unless ( match = ( selector.match p2 ) ? ( selector.match p1 ) )?\n      throw new Error \"µ37799 illegal selector #{rpr selector}\"\n    g       = {}\n    g[ k ]  = v for k, v of match.groups when v isnt ''\n    if g.attribute? and ( g.attribute isnt 'stamped' )\n      throw new Error \"µ77764 unknown attribute name #{rpr g.attribute}\"\n    switch g.value\n      when undefined      then stamped_values = [       false, ]\n      when '*'            then stamped_values = [ true, false, ]\n      when 'true'         then stamped_values = [ true,        ]\n      when 'false'        then stamped_values = [       false, ]\n      else throw new Error \"µ33366 illegal attribute or value in selector #{rpr selector}\"\n    #.......................................................................................................\n    return false if ( d.$stamped ? false ) not in stamped_values\n    return ( d.$key is g.skey ) if g.key?\n    return false unless d.$key.startsWith g.sigil\n    return true\n\n\n#===========================================================================================================\nmodule.exports = { Datom, DATOM: new Datom(), }\n\n\n\n\n"
  ]
}