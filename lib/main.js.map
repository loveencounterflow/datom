{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ assign\n  copy\n  jr }                    = CND\n#...........................................................................................................\nMultimix                  = require 'multimix'\ntypes                     = require './types'\n{ isa\n  validate\n  defaults\n  type_of }               = types\nLFT                       = require 'letsfreezethat'\nLFT_nofreeze              = LFT.nofreeze\n@_copy                    = LFT_nofreeze._copy.bind LFT\n@_nofreeze                = false\n\n#-----------------------------------------------------------------------------------------------------------\n@create_nofreeze = ->\n  R = new @Pipedreams()\n  R._nofreeze = true\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@freeze = ( d ) -> if @_nofreeze then LFT_nofreeze.freeze d else LFT.freeze d\n@thaw   = ( d ) -> if @_nofreeze then LFT_nofreeze.thaw   d else LFT.thaw   d\n\n#-----------------------------------------------------------------------------------------------------------\n@lets = ( original, modifier ) ->\n  if @_nofreeze\n    draft = @_copy original\n    if modifier?\n      modifier draft\n      draft.$dirty = true unless draft.$dirty isnt original.dirty\n    return draft\n  #.........................................................................................................\n  draft = @thaw original\n  if modifier?\n    modifier draft\n    draft.$dirty = true unless draft.$dirty isnt original.dirty\n  return @freeze draft\n\n#-----------------------------------------------------------------------------------------------------------\n@set = ( d, k, P... ) ->\n  if isa.text k\n    throw new Error \"Âµ67663 expected 1 value got #{count}\" unless ( count = P.length ) is 1\n    return @lets d, ( d ) -> d[ k ] = P[ 0 ]\n  return @lets d, ( d ) -> d[ k ]  = v for k, v of assign {}, k, P...\n\n#-----------------------------------------------------------------------------------------------------------\n@unset = ( d, k ) -> @lets d, ( d ) -> delete d[ k ]\n\n#-----------------------------------------------------------------------------------------------------------\n@stamp = ( d, P... ) ->\n  ### Set the `$stamped` attribute on datom to sigil it as processed. Stamped datoms will not be selected\n  by the `select` method unless tag '#stamped' is used. ###\n  return @lets d, ( d ) -> assign d, P..., { $stamped: true, }\n\n#-----------------------------------------------------------------------------------------------------------\n@unstamp = ( d ) ->\n  return d unless d.$stamped\n  return @lets d, ( d ) -> delete d.$stamped\n\n#-----------------------------------------------------------------------------------------------------------\n@is_system = ( d ) ->\n  ### Return whether datom is a system datom (i.e. whether its `sigil` equals `'~'`). ###\n  return d.$key.match /^[~\\[\\]]/\n\n#-----------------------------------------------------------------------------------------------------------\n@is_stamped = ( d ) -> d.$stamped ? false ### i.e. already processed? ###\n@is_fresh   = ( d ) -> d.$fresh   ? false ### i.e. created within stream? ###\n@is_dirty   = ( d ) -> d.$dirty   ? false ### i.e. modified? ###\n\n#-----------------------------------------------------------------------------------------------------------\n@new_datom = ( $key, $value, other... ) ->\n  ### TAINT should validate key ###\n  ### When `other` contains a key `$`, it is treated as a hint to copy\n  system-level attributes; if the value of key `$` is a POD that has itself a\n  key `$`, then a copy of that value is used. This allows to write `new_datom\n  ..., $: d` to copy system-level attributes such as source locations to a new\n  datom. ###\n  validate.datom_key $key\n  if $value?\n    $value = { $value, } if not isa.object $value\n    R     = assign { $key, }, $value, other...\n  else\n    R     = assign { $key, }, other...\n  while ( isa.object R.$ ) and ( isa.object R.$.$ ) then R.$ = copy R.$.$\n  return @freeze R\n\n#-----------------------------------------------------------------------------------------------------------\n@new_single_datom = ( $key, $value, other... ) -> @new_datom         \"^#{$key}\",  $value, other...\n@new_open_datom   = ( $key, $value, other... ) -> @new_datom         \"<#{$key}\",  $value, other...\n@new_close_datom  = ( $key, $value, other... ) -> @new_datom         \">#{$key}\",  $value, other...\n@new_system_datom = ( $key, $value, other... ) -> @new_datom         \"~#{$key}\",  $value, other...\n@new_text_datom   = (       $value, other... ) -> @new_single_datom  'text',      $value, other...\n@new_end_datom    =                            -> @new_system_datom  'end'\n# @new_flush_datom    =                           -> @new_system_datom  'flush'\n\n#-----------------------------------------------------------------------------------------------------------\n@new_warning = ( ref, message, d, other...  ) ->\n  @new_system_datom 'warning', d, { ref, message, }, other...\n\n\n#===========================================================================================================\n# SELECT\n#-----------------------------------------------------------------------------------------------------------\nselector_pattern = /^[<^>\\[~\\]][^<^>\\[~\\]]*$/\n\n#-----------------------------------------------------------------------------------------------------------\n@select = ( d, selector ) ->\n  throw new Error \"Âµ86606 expected a selector, got none\" unless selector?\n  return false unless ( ( isa.object d ) and ( d.$key? ) )\n  #.........................................................................................................\n  stamped = false\n  if selector.endsWith '#stamped'\n    stamped   = true\n    selector  = selector[ ... selector.length - 8 ]\n    throw new Error \"Âµ33982 selector cannot just contain tag '#stamped'\" if selector is ''\n  #.........................................................................................................\n  throw new Error \"Âµ37783 illegal selector #{rpr selector}\" unless selector_pattern.test selector\n  #.........................................................................................................\n  return false if ( not stamped ) and ( d.$stamped ? false )\n  return d.$key is selector\n\n\n#===========================================================================================================\n# EXPORT\n#-----------------------------------------------------------------------------------------------------------\nMAIN = @\nclass @Datom extends Multimix\n  @include MAIN,                              { overwrite: false, }\n  # @include ( require './outliner.mixin' ),    { overwrite: false, }\n  # @include ( require './cachewalker.mixin' ), { overwrite: false, }\n  # @include ( require './_temp_svgttf' ),      { overwrite: false, } ### !!!!!!!!!!!!!!!!!!!!!!!!!!! ###\n  # @extend MAIN, { overwrite: false, }\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( settings = null ) ->\n    super()\n    validate.datom_settings settings = { defaults.settings..., settings..., }\n\n  #   @CLI    = require './cli'\n  #   @CFG    = require './cfg'\n  #   @TAGS   = require './tags'\n  #   @NICKS  = require './texfontnamesake'\n  #   @LINKS  = require './links'\n  #   @export target if target?\n\nmodule.exports = FONTMIRROR = new @Datom()\n\n\n\n\n"
  ]
}