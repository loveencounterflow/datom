{
  "version": 3,
  "file": "html.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/html.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/TESTS/HTML'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n#...........................................................................................................\nDATOM                     = new ( require '../..' ).Datom { dirty: false, }\n{ new_datom\n  wrap_datom\n  # lets\n  select }                = DATOM.export()\n#...........................................................................................................\ntest                      = require 'guy-test'\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"must quote attribute value\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ \"\",           true,   null, ]\n    [ \"\\\"\",         true,   null, ]\n    [ \"'\",          true,   null, ]\n    [ \"<\",          true,   null, ]\n    [ \"<>\",         true,   null, ]\n    [ \"foo\",        false,  null, ]\n    [ \"foo bar\",    true,   null, ]\n    [ \"foo\\nbar\",   true,   null, ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      must_quote = not DATOM.HTML.isa.datom_html_naked_attribute_value probe\n      resolve must_quote\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML._as_attribute_literal\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ \"\",           \"''\",                       null, ]\n    [ '\"',          '\\'\"\\'',                    null, ]\n    [ \"'\",          \"'&#39;'\",                  null, ]\n    [ \"<\",          \"'&lt;'\",                   null, ]\n    [ \"<>\",         \"'&lt;&gt;'\",               null, ]\n    [ \"foo\",        \"foo\",                      null, ]\n    [ \"foo bar\",    \"'foo bar'\",                null, ]\n    [ \"foo\\nbar\",   \"'foo&#10;bar'\",            null, ]\n    [ \"'<>'\",       \"'&#39;&lt;&gt;&#39;'\",     null, ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve DATOM.HTML._as_attribute_literal probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.isa.datom_html_tagname\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ \"\",             false,  null, ]\n    [ \"\\\"\",           false,  null, ]\n    [ \"'\",            false,  null, ]\n    [ \"<\",            false,  null, ]\n    [ \"<>\",           false,  null, ]\n    [ \"foo bar\",      false,  null, ]\n    [ \"foo\\nbar\",     false,  null, ]\n    [ \"foo\",          true,   null, ]\n    [ \"此は何ですか\", true,   null, ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve DATOM.HTML.isa.datom_html_tagname probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (singular tags)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '^foo', ],                                    \"<foo></foo>\",                                       ]\n    [ [ '^foo', { height: 42,               }, ],     \"<foo height=42></foo>\",                             ]\n    [ [ '^foo', { class: 'plain',           }, ],     \"<foo class=plain></foo>\",                           ]\n    [ [ '^foo', { class: 'plain hilite',    }, ],     \"<foo class='plain hilite'></foo>\",                  ]\n    [ [ '^foo', { editable: true,           }, ],     \"<foo editable></foo>\",                              ]\n    [ [ '^foo', { empty: '',                }, ],     \"<foo empty=''></foo>\",                              ]\n    [ [ '^foo', { specials: '<\\n\\'\"&>',     }, ],     \"<foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'></foo>\",  ]\n    [ [ '^something', { one: 1, two: 2,     }, ],     \"<something one=1 two=2></something>\",               ]\n    [ [ '^something', { z: 'Z', a: 'A',     }, ],     \"<something a=A z=Z></something>\",                   ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (closing tags)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '>foo', ],                                    \"</foo>\",           ]\n    [ [ '>foo', { height: 42,               }, ],     \"</foo>\",           ]\n    [ [ '>foo', { class: 'plain',           }, ],     \"</foo>\",           ]\n    [ [ '>foo', { class: 'plain hilite',    }, ],     \"</foo>\",           ]\n    [ [ '>foo', { editable: true,           }, ],     \"</foo>\",           ]\n    [ [ '>foo', { empty: '',                }, ],     \"</foo>\",           ]\n    [ [ '>foo', { specials: '<\\n\\'\"&>',     }, ],     \"</foo>\",           ]\n    [ [ '>something', { one: 1, two: 2,     }, ],     \"</something>\",     ]\n    [ [ '>something', { z: 'Z', a: 'A',     }, ],     \"</something>\",     ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (opening tags)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '<foo', ],                                    \"<foo>\",                                        ]\n    [ [ '<foo', { height: 42,               }, ],     \"<foo height=42>\",                              ]\n    [ [ '<foo', { class: 'plain',           }, ],     \"<foo class=plain>\",                            ]\n    [ [ '<foo', { class: 'plain hilite',    }, ],     \"<foo class='plain hilite'>\",                   ]\n    [ [ '<foo', { editable: true,           }, ],     \"<foo editable>\",                               ]\n    [ [ '<foo', { empty: '',                }, ],     \"<foo empty=''>\",                               ]\n    [ [ '<foo', { specials: '<\\n\\'\"&>',     }, ],     \"<foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'>\",   ]\n    [ [ '<something', { one: 1, two: 2,     }, ],     \"<something one=1 two=2>\",                      ]\n    [ [ '<something', { z: 'Z', a: 'A',     }, ],     \"<something a=A z=Z>\",                          ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (texts)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '^text', ],                                    \"\",                            ]\n    [ [ '^text', { height: 42,               }, ],     \"\",                            ]\n    [ [ '^text', { text: '<me & you>\\n',     }, ],     \"&lt;me &amp; you&gt;\\n\",      ]\n    [ [ '<text', { z: 'Z', a: 'A',           }, ],     \"<text a=A z=Z>\",              ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (opening tags w/ $value)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '<foo', ],                                    \"<foo>\",                                        ]\n    [ [ '<foo', { ignored: 'xxx', $value: { height: 42,              }, }, ], \"<foo height=42>\",                              ]\n    [ [ '<foo', { ignored: 'xxx', $value: { class: 'plain',          }, }, ], \"<foo class=plain>\",                            ]\n    [ [ '<foo', { ignored: 'xxx', $value: { class: 'plain hilite',   }, }, ], \"<foo class='plain hilite'>\",                   ]\n    [ [ '<foo', { ignored: 'xxx', $value: { editable: true,          }, }, ], \"<foo editable>\",                               ]\n    [ [ '<foo', { ignored: 'xxx', $value: { empty: '',               }, }, ], \"<foo empty=''>\",                               ]\n    [ [ '<foo', { ignored: 'xxx', $value: { specials: '<\\n\\'\"&>',    }, }, ], \"<foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'>\",   ]\n    [ [ '<something', { ignored: 'xxx', $value: { one: 1, two: 2,    }, }, ], \"<something one=1 two=2>\",                      ]\n    [ [ '<something', { ignored: 'xxx', $value: { z: 'Z', a: 'A',    }, }, ], \"<something a=A z=Z>\",                          ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (system tags)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"~foo\"],\"<x-sys x-key=foo><x-sys-key>foo</x-sys-key></x-sys>\",null]\n    [[\"~foo\",{\"height\":42}],\"<x-sys x-key=foo height=42><x-sys-key>foo</x-sys-key></x-sys>\",null]\n    [[\"[foo\",{\"class\":\"plain\"}],\"<x-sys x-key=foo class=plain><x-sys-key>foo</x-sys-key>\",null]\n    [[\"[foo\",{\"class\":\"plain hilite\"}],\"<x-sys x-key=foo class='plain hilite'><x-sys-key>foo</x-sys-key>\",null]\n    [[\"]foo\",{\"editable\":true}],\"</x-sys>\",null]\n    [[\"]foo\",{\"empty\":\"\"}],\"</x-sys>\",null]\n    [[\"~foo\",{\"specials\":\"<\\n'\\\"&>\"}],\"<x-sys x-key=foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'><x-sys-key>foo</x-sys-key></x-sys>\",null]\n    [[\"~something\",{\"one\":1,\"two\":2}],\"<x-sys x-key=something one=1 two=2><x-sys-key>something</x-sys-key></x-sys>\",null]\n    [[\"~something\",{\"z\":\"Z\",\"a\":\"A\"}],\"<x-sys x-key=something a=A z=Z><x-sys-key>something</x-sys-key></x-sys>\",null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (raw pseudo-tag)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '^raw', ],                                    \"\",                                       ]\n    [ [ '^raw', { height: 42,               }, ],     \"\",                                       ]\n    [ [ '^raw', { text: '<\\n\\'\"&>',           }, ],   '<\\n\\'\"&>',                               ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML.cast.html (doctype)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ [ '^doctype', ],                  \"<!DOCTYPE html>\",        ]\n    [ [ '^doctype', { height: 42, }, ], \"<!DOCTYPE html>\",        ]\n    [ [ '^doctype', \"obvious\", ],       \"<!DOCTYPE obvious>\",     ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d = new_datom probe...\n      resolve DATOM.HTML.cast.html d\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nif module is require.main then do => # await do =>\n  # await @_demo()\n  test @\n  help 'ok'\n\n  # test @[ \"must quote attribute value\" ]\n  # test @[ \"DATOM.HTML._as_attribute_literal\" ]\n  # test @[ \"DATOM.HTML.isa.datom_html_tagname\" ]\n  # test @[ \"DATOM.HTML.cast.html (singular tags)\" ]\n  # test @[ \"DATOM.HTML.cast.html (closing tags)\" ]\n  # test @[ \"DATOM.HTML.cast.html (opening tags)\" ]\n  # test @[ \"DATOM.HTML.cast.html (texts)\" ]\n  # test @[ \"DATOM.HTML.cast.html (opening tags w/ $value)\" ]\n  # test @[ \"DATOM.HTML.cast.html (system tags)\" ]\n  # test @[ \"DATOM.HTML.cast.html (raw pseudo-tag)\" ]\n  # test @[ \"DATOM.HTML.cast.html (doctype)\" ]\n"
  ]
}