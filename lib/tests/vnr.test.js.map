{
  "version": 3,
  "file": "vnr.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/vnr.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/TESTS/VNR'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\ntypes                     = require '../types'\n{ isa\n  validate\n  type_of }               = types\n#...........................................................................................................\n{ inspect }               = require 'util'\nrpr = ( P... ) ->\n  return ( \\\n    ( inspect x, { depth: Infinity, maxArrayLength: Infinity, breakLength: Infinity, compact: true, } ) \\\n      for x in P ).join ' '\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"VNR 1\" ] = ( T, done ) ->\n#   VNR                       = require '../vnr'\n#   DATOM                     = new ( require '../..' ).Datom { merge_values: false, }\n#   { new_datom\n#     select }                = DATOM.export()\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [[\"^number\",null],{\"$key\":\"^number\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       debug '^223-1^', d = VNR.new_vnr()\n#       debug '^223-2^', d = VNR.new_vnr      [ 4, 6, 5, ]\n#       debug '^223-3^', d = VNR.deepen       d\n#       debug '^223-4^', d = VNR.deepen       d, 42\n#       debug '^223-5^', d = VNR.advance      d\n#       debug '^223-6^', d = VNR.recede       d\n#       # debug '^223-7^', d = VNR._lower_bound d\n#       # debug '^223-8^', d = VNR._upper_bound d\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\ntest_basics = ( T, VNR ) ->\n  T.eq ( d = VNR.new_vnr()                 ), [ 0, ]\n  T.eq ( d = VNR.new_vnr      [ 4, 6, 5, ] ), [ 4, 6, 5, ]\n  T.eq ( d = VNR.deepen       d            ), [ 4, 6, 5, 0, ]\n  T.eq ( d = VNR.deepen       d, 42        ), [ 4, 6, 5, 0, 42, ]\n  T.eq ( d = VNR.advance      d            ), [ 4, 6, 5, 0, 43, ]\n  T.eq ( d = VNR.recede       d            ), [ 4, 6, 5, 0, 42, ]\n  T.ok ( VNR.new_vnr  d ) isnt d\n  T.ok ( VNR.deepen   d ) isnt d\n  T.ok ( VNR.advance  d ) isnt d\n  T.ok ( VNR.recede   d ) isnt d\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"VNR 1\" ] = ( T, done ) ->\n  test_basics T, require '../vnr'\n  test_basics T, ( require '../..' ).VNR\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"VNR sort 2\" ] = ( T, done ) ->\n  matchers =\n    total:    [\n      [ [ 1 ], [ 1, 0 ], [ 1, 0, -1 ], [ 1, 0, 1 ], [ 2 ], [ 2, -1 ], [ 2, 0 ], [ 2, 1, ] ]\n      [ [ Infinity ], [ Infinity, -1 ], [ Infinity, 1 ] ]\n      [ [ Infinity, -1, ], [ Infinity, 0, ], [ Infinity, 1, ], ]\n      ]\n    partial:  [\n      [ [ 1, 0, -1 ], [ 1 ], [ 1, 0 ], [ 1, 0, 1 ], [ 2, -1 ], [ 2, 0 ], [ 2 ], [ 2, 1 ] ]\n      [ [ 1, 0, -1 ], [ 1, 0 ], [ 1 ], [ 1, 0, 1 ], [ 2, -1 ], [ 2 ], [ 2, 0 ], [ 2, 1 ] ]\n      [ [ 2, 0 ], [ 2 ], ]\n      [ [ 2 ],    [ 2, 0 ], ]\n      [ [ Infinity, -1, ], [ Infinity, ], [ Infinity, 1, ], ]\n      [ [ Infinity, -1, ], [ Infinity, 0, ], [ Infinity, 1, ], ]\n      ]\n    fair:  [\n      [ [ 1, 0, -1 ], [ 1 ], [ 1, 0 ], [ 1, 0, 1 ], [ 2, -1 ], [ 2 ], [ 2, 0 ], [ 2, 1 ] ]\n      [ [ 2 ],    [ 2, 0 ], ]\n      [ [ Infinity, -1, ], [ Infinity, ], [ Infinity, 1, ], ]\n      [ [ Infinity, -1, ], [ Infinity, 0, ], [ Infinity, 1, ], ]\n      [ [ 1, ], ]\n      [ [ 1, ], [ 2, ] ]\n      ]\n  for ordering in [ 'total', 'partial', 'fair', ]\n    VNR     = new ( require '../..' ).VNR.Vnr { ordering, }\n    # VNR     = new ( require '../..' ).VNR.Vnr { ordering, validate: false, }\n    for matcher in matchers[ ordering ]\n      probe   = [ matcher..., ]\n      await T.perform probe, matcher, null, -> return new Promise ( resolve, reject ) ->\n        result  = VNR.sort probe\n        T.ok probe isnt matcher\n        T.ok probe isnt result\n        T.eq result, matcher\n        # debug '^334^', rpr result\n        resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"VNR sort 3\" ] = ( T, done ) ->\n  VNR     = ( require '../..' ).VNR\n  info CND.blue   'cmp_total    ', \"[ 1, ],     [ 1, -1, ]\", VNR.cmp_total   [ 1, ],     [ 1, -1, ]\n  info CND.blue   'cmp_total    ', \"[ 1, ],     [ 1,  0, ]\", VNR.cmp_total   [ 1, ],     [ 1,  0, ]\n  info CND.blue   'cmp_total    ', \"[ 1, ],     [ 1, +1, ]\", VNR.cmp_total   [ 1, ],     [ 1, +1, ]\n  info CND.blue   'cmp_total    ', \"----------------------\"\n  info CND.blue   'cmp_total    ', \"[ 1, 0, ],  [ 1, -1, ]\", VNR.cmp_total   [ 1, 0, ],  [ 1, -1, ]\n  info CND.blue   'cmp_total    ', \"[ 1, 0, ],  [ 1,  0, ]\", VNR.cmp_total   [ 1, 0, ],  [ 1,  0, ]\n  info CND.blue   'cmp_total    ', \"[ 1, 0, ],  [ 1, +1, ]\", VNR.cmp_total   [ 1, 0, ],  [ 1, +1, ]\n  info()\n  info CND.lime   'cmp_partial  ', \"[ 1, ],     [ 1, -1, ]\", VNR.cmp_partial [ 1, ],     [ 1, -1, ]\n  info CND.lime   'cmp_partial  ', \"[ 1, ],     [ 1,  0, ]\", VNR.cmp_partial [ 1, ],     [ 1,  0, ]\n  info CND.lime   'cmp_partial  ', \"[ 1, ],     [ 1, +1, ]\", VNR.cmp_partial [ 1, ],     [ 1, +1, ]\n  info CND.lime   'cmp_partial  ', \"----------------------\"\n  info CND.lime   'cmp_partial  ', \"[ 1, 0, ],  [ 1, -1, ]\", VNR.cmp_partial [ 1, 0, ],  [ 1, -1, ]\n  info CND.lime   'cmp_partial  ', \"[ 1, 0, ],  [ 1,  0, ]\", VNR.cmp_partial [ 1, 0, ],  [ 1,  0, ]\n  info CND.lime   'cmp_partial  ', \"[ 1, 0, ],  [ 1, +1, ]\", VNR.cmp_partial [ 1, 0, ],  [ 1, +1, ]\n  info()\n  info CND.steel  'cmp_fair     ', \"[ 1, ],     [ 1, -1, ]\", VNR.cmp_fair    [ 1, ],     [ 1, -1, ]\n  info CND.steel  'cmp_fair     ', \"[ 1, ],     [ 1,  0, ]\", VNR.cmp_fair    [ 1, ],     [ 1,  0, ]\n  info CND.steel  'cmp_fair     ', \"[ 1, ],     [ 1, +1, ]\", VNR.cmp_fair    [ 1, ],     [ 1, +1, ]\n  info CND.steel  'cmp_fair     ', \"----------------------\"\n  info CND.steel  'cmp_fair     ', \"[ 1, 0, ],  [ 1, -1, ]\", VNR.cmp_fair    [ 1, 0, ],  [ 1, -1, ]\n  info CND.steel  'cmp_fair     ', \"[ 1, 0, ],  [ 1,  0, ]\", VNR.cmp_fair    [ 1, 0, ],  [ 1,  0, ]\n  info CND.steel  'cmp_fair     ', \"[ 1, 0, ],  [ 1, +1, ]\", VNR.cmp_fair    [ 1, 0, ],  [ 1, +1, ]\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"test for stable sort 2\" ] = ( T, done ) ->\n  n         = 1e4\n  m         = Math.floor n / 3\n  ds        = ( [ nr, ( CND.random_integer -m, +m ) ] for nr in [ 1 .. n ])\n  ds.sort ( a, b ) -> a[ 1 ] - b[ 1 ]\n  prv_r     = -Infinity\n  prv_nr    = -Infinity\n  is_stable = true\n  for [ nr, r, ] in ds\n    if r is prv_r\n      is_stable = is_stable and nr > prv_nr\n    prv_r   = r\n    prv_nr  = nr\n  T.ok is_stable\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"test VNR._first_nonzero_is_negative()\" ] = ( T, done ) ->\n  VNR                       = require '../vnr'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[ [3,4,0,0,],        2, ], false, ]\n    [[ [3,4,0,-1,],       2, ], true, ]\n    [[ [3,4,0,-1,0,0,],   2, ], true, ]\n    [[ [3,4,0,1,-1,0,0,], 2, ], false, ]\n    [[ [3,4,0,1,-1,0,0,], 0, ], false, ]\n    [[ [3,4,0,0,],        3, ], false, ]\n    [[ [3,4,0,0,],        4, ], false, ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ list, first_idx, ] = probe\n      resolve VNR._first_nonzero_is_negative list, first_idx\n  done()\n  return null\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @[ \"VNR sort 2\" ]\n  # test @[ \"VNR sort 3\" ]\n  # @[ \"VNR sort 3\" ]()\n  # test @[ \"test VNR._first_nonzero_is_negative()\" ]\n\n\n\n\n"
  ]
}