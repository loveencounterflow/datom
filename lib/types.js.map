{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_settings',\n  tests:\n    \"x is a object\":                  ( x ) -> @isa.object x\n    \"x.merge_values is a ?boolean\":   ( x ) -> ( not x.merge_values? ) or @isa.boolean x.merge_values\n    \"x.freeze is a ?boolean\":         ( x ) -> ( not x.freeze?       ) or @isa.boolean x.freeze\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_nonempty_list_of_positive_integers', ( x ) ->\n  return false unless @isa.nonempty_list x\n  return x.every ( xx ) => @isa.positive_integer xx\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_sigil',\n  tests:\n    \"x is a chr\":                             ( x ) -> @isa.chr x\n    \"x has sigil\":                            ( x ) -> x in '^<>~[]'\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_key',\n  tests:\n    \"x is a nonempty text\":                   ( x ) -> @isa.nonempty_text   x\n    \"x has sigil\":                            ( x ) -> @isa.datom_sigil     x[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_datom',\n  tests:\n    \"x is a object\":                          ( x ) -> @isa.object          x\n    \"x.$key is a datom_key\":                  ( x ) -> @isa.datom_key       x.$key\n    \"x.$stamped is an optional boolean\":      ( x ) -> ( not x.$stamped? ) or ( @isa.boolean x.$stamped )\n    \"x.$dirty is an optional boolean\":        ( x ) -> ( not x.$dirty?   ) or ( @isa.boolean x.$dirty   )\n    \"x.$fresh is an optional boolean\":        ( x ) -> ( not x.$fresh?   ) or ( @isa.boolean x.$fresh   )\n    #.......................................................................................................\n    \"x.$vnr is an optional nonempty list of positive integers\": ( x ) ->\n      ( not x.$vnr? ) or @isa.datom_nonempty_list_of_positive_integers x.$vnr\n\n\n#===========================================================================================================\n# DEFAULTS, CASTS\n#-----------------------------------------------------------------------------------------------------------\n@defaults =\n  settings:\n    merge_values: true\n    freeze:       true\n    dirty:        true\n\n#-----------------------------------------------------------------------------------------------------------\n@cast = {}\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n### thx to https://www.w3.org/TR/xml ###\ntagname_head_pattern = ///\n  a-z\n  A-Z\n  :_\n  \\xc0-\\xd6\n  \\xd8-\\xf6\n  \\u00f8-\\u02ff\n  \\u0370-\\u037d\n  \\u037f-\\u1fff\n  \\u200c-\\u200d\n  \\u2070-\\u218f\n  \\u2c00-\\u2fef\n  \\u3001-\\ud7ff\n  \\uf900-\\ufdcf\n  \\ufdf0-\\ufffd\n  \\u{10000}-\\u{effff} ///u\ntagname_tail_pattern = ///\n  \\.-\n  0-9\n  \\xb7\n  \\u0300-\\u036f\n  \\u203f-\\u2040 ///u\ntagname_pattern = /// ^\n  [#{tagname_head_pattern.source}]\n  [#{tagname_head_pattern.source}#{tagname_tail_pattern.source}]* $ ///u ### must NOT set global flag ###\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_html_tagname',\n  tests:\n    \"x is a text\":                    ( x ) -> @isa.text x\n    \"x matches tagname_pattern\":      ( x ) -> tagname_pattern.test x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom_html_naked_attribute_value',\n  ### thx to https://raw.githubusercontent.com/mathiasbynens/mothereff.in/master/unquoted-attributes/eff.js\n  also see https://mothereff.in/unquoted-attributes,\n  https://mathiasbynens.be/notes/unquoted-attribute-values ###\n  tests:\n    \"x is a text\":                            ( x ) -> @isa.text x\n    \"x isa datom_html_naked_attribute_text\":  ( x ) -> @isa._datom_html_naked_attribute_text x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare '_datom_html_naked_attribute_text', ( x ) -> /^[^ \\t\\n\\f\\r\"'`=<>]+$/.test x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @_CSS_must_quote = ( x ) ->\n#   ### NOTE for completeness, from the same source https://mathiasbynens.be/notes/unquoted-attribute-values ###\n#   return true if ( x is '' ) or ( x is '-' )\n#   ### Escapes are valid, so replace them with a valid non-empty string ###\n#   x = ( x.replace /\\\\([0-9A-Fa-f]{1,6})[ \\t\\n\\f\\r]?/g, 'a' ).replace /\\\\./g, 'a'\n#   return not not ( ( /[\\0-\\x2C\\x2E\\x2F\\x3A-\\x40\\x5B-\\x5E\\x60\\x7B-\\x9F]/.test x ) or ( /^-?\\d/.test x ) )\n\n"
  ]
}