{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/xemitter.mixin.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/XEMITTER'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\nmisfit                    = Symbol 'misfit'\ntypes                     = require './types'\n{ isa\n  validate\n  cast\n  type_of }               = types\n\n#-----------------------------------------------------------------------------------------------------------\n### rewrite using MultiMix` ###\nprovide_library = ->\n\n  #=========================================================================================================\n  ### https://github.com/sindresorhus/emittery ###\n  Emittery                  = require 'emittery'\n  DATOM                     = require '..'\n\n  unless ( version = ( require 'emittery/package.json' ).version ) is '0.6.0'\n    throw new Error \"due to changes in https://github.com/sindresorhus/emittery/releases, emittery version is fixed at 0.6.0, got #{version}\"\n\n  #=========================================================================================================\n  # IMPLEMENTATION DETAILS\n  #---------------------------------------------------------------------------------------------------------\n  @_emitter         = new Emittery()\n  @_has_contractors = {}\n  @_has_listener    = {}\n\n  #---------------------------------------------------------------------------------------------------------\n  @_mark_as_primary = ( x ) -> DATOM.wrap_datom '~XEMITTER-preferred', { $key: '~wrapper', $value: x, }\n  @_filter_primary  = ( x ) -> DATOM.select x,  '~XEMITTER-preferred'\n\n  #---------------------------------------------------------------------------------------------------------\n  @_get_primary = ( values ) ->\n    primary_responses = values.filter @_filter_primary\n    return misfit unless primary_responses.length > 0\n    return primary_responses[ 0 ]?.$value.$value\n\n  #---------------------------------------------------------------------------------------------------------\n  @_datom_from_emit_arguments = ( P... ) ->\n    unless ( arity = P.length ) > 0\n      throw new Error \"µ44422 expected one or more arguments, got none\"\n    return DATOM.new_datom P[ 0 ], P[ 1 .. ]... if isa.text P[ 0 ]\n    unless ( arity = P.length ) is 1\n      throw new Error \"µ44422 expected single argument unless first is key, got #{arity}\"\n    unless DATOM.is_datom d = P[ 0 ]\n      throw new Error \"µ44422 expected a text or a datom got a #{type_of d}\"\n    return d\n\n\n  #=========================================================================================================\n  # API / RECEIVING\n  #---------------------------------------------------------------------------------------------------------\n  @contract = ( key, listener ) ->\n    validate.datom_key  key\n    validate.callable   listener\n    throw new Error \"µ68704 key #{rpr key} already has a primary listener\" if @_has_contractors[ key ]\n    @_has_contractors[ key ]  = true\n    @_has_listener[ key ]     = true\n    return @_emitter.on key, ( d ) => @_mark_as_primary await listener d\n\n  #---------------------------------------------------------------------------------------------------------\n  @listen_to = ( key, listener ) ->\n    validate.datom_key  key\n    validate.callable   listener\n    @_has_listener[ key ] = true\n    return @_emitter.on key, ( d ) => await listener d\n\n  #---------------------------------------------------------------------------------------------------------\n  @listen_to_all = ( listener ) ->\n    validate.callable   listener\n    return @_emitter.onAny ( key, d ) => await listener key, d\n\n  #---------------------------------------------------------------------------------------------------------\n  @listen_to_unheard = ( listener ) ->\n    validate.callable   listener\n    return @_emitter.onAny ( key, d ) => await listener key, d unless @_has_listener[ key ]\n\n\n  #=========================================================================================================\n  # API / SENDING\n  #---------------------------------------------------------------------------------------------------------\n  @emit = ( key, d ) ->\n    d = @_datom_from_emit_arguments arguments...\n    return await @_emitter.emit d.$key, d\n\n  #---------------------------------------------------------------------------------------------------------\n  @delegate = ( key, d ) ->\n    if ( R = @_get_primary await @emit arguments... ) is misfit\n      throw new Error \"µ83733 no results for #{rpr key.$key ? key}\"\n    return R\n\n\n  #=========================================================================================================\n  #\n  #---------------------------------------------------------------------------------------------------------\n  for name, value of L = @\n    continue unless isa.function value.bind\n    L[ name ] = value.bind L\n\n\n############################################################################################################\n@new_xemitter = ->\n  provide_library.apply R = {}\n  return R\n\n"
  ]
}